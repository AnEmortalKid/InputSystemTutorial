using System;
using TMPro;
using UnityEngine;
using UnityEngine.InputSystem;

namespace Christina.Typography
{
    [RequireComponent(typeof(TMP_Text))]
    public class SetTextToTextBox : MonoBehaviour
    {
        [TextArea(2, 3)] [SerializeField] private string message = "Press BUTTONPROMPT to interact.";

        [Header("Setup for sprites")] [SerializeField]
        private ListOfTmpSpriteAssets listOfTmpSpriteAssets;

        [SerializeField] private DeviceType deviceType;

        /// <summary>
        ///  class auto generated by the InputSystem
        /// </summary>
        private PlayerInput _playerInput;

        private TMP_Text _textBox;

        private void Awake()
        {
            _playerInput = new PlayerInput();
            _textBox = GetComponent<TMP_Text>();
        }

        private void Start()
        {
            SetText();
        }

        [ContextMenu("Set Text")]
        private void SetText()
        {
            // safe guard against devices not in our sprite sheet
            if ((int)deviceType > listOfTmpSpriteAssets.SpriteAssets.Count - 1)
            {
                Debug.LogFormat("Missing Sprite Asset for {0}", deviceType);
                return;
            }

            _textBox.text = CompleteTextWithButtonPromptSprite.ReadAndReplaceBnding(
                message,
                _playerInput.Player.Interact.bindings[(int)deviceType],
                listOfTmpSpriteAssets.SpriteAssets[(int)deviceType]);
        }

        private enum DeviceType
        {
            Keyboard = 0,
            Gamepad = 1
        }
    }
}